openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    An api used for Alura level Up - Next Dev
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:3000
tags:
  - name: category
    description: Category methods
  - name: product
paths:
  /api/categories:
    get:
      tags:
        - category
      summary: Get all categories
      description: Returns a map categorie name and status
      operationId: getCategories
      responses:
        '200':
          description: successful operation
          content:
           application/json:
              schema:
                $ref: "#/components/schemas/categories"
        '404':
          description: Nenhuma categoria encontrada
          content:
            application/json:
              example: "Not Found"
  /api/admin/categories:
    post:
      tags:
        - category
      summary: Create a category
      description: Returns a map categorie name and status
      operationId: postCategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/categoryPost"
      responses:
        '201':
          description: successful operation
          content:
           application/json:
              schema:
                $ref: "#/components/schemas/category"
        '404':
          description: Nenhuma categoria encontrada
          content:
            application/json:
              example: "Not Found"
  /api/products:
    get:
      tags:
        - products
      summary: Get all products
      description: Returns all products
      operationId: getProducts
      responses:
        '200':
          description: successful operation
          content:
           application/json:
              schema:
                $ref: "#/components/schemas/products"
        '404':
          description: Nenhum produto encontrada
          content:
            application/json:
              example: "Not Found"
  /api/products/{idProduct}:
    get:
      tags:
        - products
      summary: Get all products
      description: Returns all products
      operationId: getProduct
      parameters:
        - name: idProduct
          in: path
          description: ID of product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
           application/json:
              schema:
                $ref: "#/components/schemas/product"
        '404':
          description: Nenhum produto encontrado
          content:
            application/json:
              example: "Not Found"
  /api/admin/products/create:
    post:
      tags:
        - products
      summary: Creater a product
      description: Returns product created
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productDTO'
      responses:
        '200':
          description: successful operation
          content:
           application/json:
              schema:
                $ref: "#/components/schemas/product"
        '404':
          description: Nenhum produto encontrado
          content:
            application/json:
              example: "Not Found"
  /api/admin/products/update:
    put:
      tags:
        - products
      summary: Update a product
      description: Returns product updated
      operationId: updateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '200':
          description: successful operation
          content:
           application/json:
              schema:
                $ref: "#/components/schemas/product"
        '404':
          description: Nenhum produto encontrado
          content:
            application/json:
              example: "Not Found"
        '400':
          description: Request mal formada
          content:
            application/json:
              example: "Bad Request"
  /api/admin/products/remove:
    delete:
      tags:
        - products
      summary: delete a product
      operationId: deleteProduct
      responses:
        '200':
          description: successful operation
        '404':
          description: Nenhum produto encontrado
          content:
            application/json:
              example: "Not Found"
        '400':
          description: Request mal formada
          content:
            application/json:
              example: "Bad Request"
components:
  schemas:
    category:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        status:
          type: string
    categories:
      type: array
      items:
        $ref: "#/components/schemas/category"
    categoryPost:
      type: object
      properties:
        nome:
            type: string
    product:
      type: object
      properties:
        _id:
          type: string
        nome:
          type: string
        descricao:
          type: string
        slug:
          type: string
        precoUnitario:
          type: number
        quantidadeEmEstoque:
          type: integer
        categoria:
          type: string
    productDTO:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        slug:
          type: string
        precoUnitario:
          type: number
        quantidadeEmEstoque:
          type: integer
        categoria:
          type: string
    products:
      type: array
      items:
        $ref: "#/components/schemas/product"